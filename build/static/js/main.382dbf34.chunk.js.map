{"version":3,"sources":["ContactsDB.jsx","components/Display/DelBtn.jsx","tools.jsx","components/Display/Display.jsx","components/Form/Form.jsx","components/Search/Search.jsx","components/Message/Message.js","App.jsx","index.jsx"],"names":["baseUrl","axios","get","then","resp","data","id","name","number","put","delete","post","DelBtn","contacts","setContacts","setMsg","onClick","ContactsDB","oldContactName","updatedContacts","filter","contact","msg","text","type","filterTerm","toLowerCase","includes","Display","filteredContacts","tools","map","Form","onSubmit","event","preventDefault","newName","target","value","trim","newNumber","confirmPrompt","length","window","confirm","newContact","catch","err","concat","Search","setFilter","onChange","input","Message","border","backgroundColor","padding","borderStyle","borderRadius","marginBottom","warnStyle","borderColor","color","successStyle","setTimeout","style","App","useState","useEffect","receivedContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.382dbf34.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\nimport axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => axios.get(baseUrl).then((resp) => resp.data);\r\n\r\nconst editContact = (id, name, number) => {\r\n  return axios.put(`${baseUrl}/${id}`, {name, number}).then(resp => resp.data);\r\n};\r\n\r\nconst delContact = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst addContact = (name, number) => {\r\n  return axios.post(`${baseUrl}/`, {name, number}).then(resp => resp.data);\r\n}\r\n\r\nexport default { getAll, editContact, delContact, addContact };\r\n","import ContactsDB from \"../../ContactsDB\";\r\n\r\nconst DelBtn = ({ id, contacts, setContacts, setMsg }) => {\r\n  const delContact = () => {\r\n    ContactsDB.delContact(id).then(() => {\r\n      let oldContactName = \"\";\r\n      const updatedContacts = contacts.filter((contact) => {\r\n        if (contact.id !== id) return true;\r\n        else {\r\n          oldContactName = contact.name;\r\n          return false;\r\n        }\r\n      });\r\n      setContacts(updatedContacts);\r\n      const msg = {\r\n        text: `${oldContactName}'s number has been deleted`,\r\n        type: \"warn\",\r\n      };\r\n      setMsg(msg);\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <button onClick={delContact}>Delete</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DelBtn;\r\n","/* eslint-disable import/no-anonymous-default-export */\r\n\r\n// compares with === and is case sensitive\r\nconst isSameAsFilter = (contacts, filterTerm) => {\r\n  return contacts.filter(\r\n    (contact) => contact.name === filterTerm\r\n  );\r\n};\r\n\r\n// uses .includes(<filter>) and is case insensitive\r\nconst includesFilter = (contacts, filterTerm) => {\r\n  return contacts.filter((contact) => {\r\n    if (!filterTerm) return contact;\r\n    if (contact.name.toLowerCase().includes(filterTerm.toLowerCase()))\r\n      return contact;\r\n    else return false;\r\n  });\r\n};\r\n\r\nexport default { includesFilter, isSameAsFilter };\r\n","import DelBtn from \"./DelBtn\";\r\nimport tools from \"../../tools\";\r\n\r\nconst Display = ({ contacts, setContacts, filterTerm, setMsg }) => {\r\n  const filteredContacts = tools.includesFilter(contacts, filterTerm);\r\n  return (\r\n    <>\r\n      <h3>Contacts</h3>\r\n      <ul>\r\n        {filteredContacts.map((contact) => (\r\n          <li key={contact.id}>\r\n            {contact.name} : {contact.number} <DelBtn key={contact.id} id={contact.id} contacts={contacts} setContacts={setContacts} setMsg={setMsg}/>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\nexport default Display;\r\n","import ContactsDB from \"../../ContactsDB\";\r\nimport tools from \"../../tools\";\r\n\r\nconst Form = ({ contacts, setContacts, setMsg }) => {\r\n  const checkEntry = (event) => {\r\n    event.preventDefault();\r\n    const newName = event.target[\"name\"].value.trim();\r\n    const newNumber = event.target[\"number\"].value.trim();\r\n\r\n    const requiredWarn = \"You must give both a name and a number\";\r\n\r\n    if (!newNumber || !newName) {\r\n      setMsg({text: requiredWarn, type: 'warn'})\r\n      return \r\n    }\r\n\r\n    const confirmPrompt = `${newName} already exists, would you like to replace the old number?`;\r\n\r\n    if (tools.isSameAsFilter(contacts, newName).length !== 0) {\r\n      if (!window.confirm(confirmPrompt)) return;\r\n      const [id] = contacts\r\n        .filter((contact) => contact.name === newName)\r\n        .map((contact) => contact.id);\r\n      ContactsDB.editContact(id, newName, newNumber)\r\n        .then((newContact) => {\r\n          const updatedContacts = contacts.map((contact) =>\r\n            contact.id !== id ? contact : newContact\r\n          );\r\n          setContacts(updatedContacts);\r\n          const msg = { text: `${newName}'s number updated`, type: \"info\" };\r\n          setMsg(msg);\r\n        })\r\n        .catch((err) => {\r\n          const msg = { text: `contact \"${newName}\" has already been deleted `, type: \"warn\" };\r\n          setMsg(msg);\r\n        });\r\n    } else {\r\n      ContactsDB.addContact(newName, newNumber).then((newContact) => {\r\n        setContacts(contacts.concat(newContact));\r\n        const msg = { text: `${newName} added to contacts`, type: \"success\" };\r\n        setMsg(msg);\r\n      });\r\n    }\r\n\r\n    event.target[\"name\"].value = \"\";\r\n    event.target[\"number\"].value = \"\";\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3>Add contact:</h3>\r\n      <form onSubmit={checkEntry}>\r\n        <div>\r\n          <label>Name: </label>\r\n          <input type=\"text\" name=\"name\" />\r\n        </div>\r\n        <div>\r\n          <label>Number: </label>\r\n          <input type=\"text\" name=\"number\" />\r\n        </div>\r\n        <button>Add</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","const Search = ({ setFilter }) => {\r\n    const filterStuff = (event) => {\r\n        const input = event.target.value.trim()\r\n        setFilter(input)\r\n    }\r\n\r\n  return (\r\n    <>\r\n      <label>Filter contacts:</label><input type=\"text\" onChange={filterStuff} />\r\n    </>\r\n  );\r\n};\r\nexport default Search;\r\n","const Message = ({ msg, setMsg }) => {\r\n  const border = {\r\n    backgroundColor: '#D3D3D3',\r\n    padding: '10px',\r\n    borderStyle: 'groove',\r\n    borderRadius: '10px',\r\n    marginBottom: '10px'\r\n  }\r\n  const warnStyle = {\r\n    ...border,\r\n    borderColor: 'red',\r\n    color: \"red\",\r\n  };\r\n  const successStyle = {\r\n    ...border,\r\n    borderColor: 'green',\r\n    color: \"green\",\r\n  };\r\n\r\n  const warningMsg = () => <div style={warnStyle}>{msg.text}</div>;\r\n\r\n  const successMsg = () => <div style={successStyle}>{msg.text}</div>;\r\n  \r\n\r\n  if (msg.text !== null) {\r\n    setTimeout(() => {\r\n      setMsg({text: null, type: ''});\r\n    }, 4000);\r\n    return msg.type === \"warn\" ? warningMsg() : successMsg();\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default Message;\r\n","import React, { useEffect, useState } from \"react\";\nimport ContactsDB from \"./ContactsDB\";\nimport Display from \"./components/Display/Display\";\nimport Form from \"./components/Form/Form\";\nimport Search from \"./components/Search/Search\";\nimport Message from \"./components/Message/Message\";\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [filterTerm, setFilter] = useState('')\n  const [msg, setMsg] = useState({text: null, type: ''})\n\n  useEffect(() => {\n    ContactsDB.getAll().then((receivedContacts) => {\n      setContacts(receivedContacts);\n    });\n  }, []);\n\n  return (\n    <>\n    <h2>Phonebook</h2>\n     <Message msg={msg} setMsg={setMsg} />\n     <Search setFilter={setFilter} />\n     <Form contacts={contacts} setContacts={setContacts} setMsg={setMsg} />\n     <Display contacts={contacts} setContacts={setContacts} filterTerm={filterTerm} setMsg={setMsg}/>\n    </>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}